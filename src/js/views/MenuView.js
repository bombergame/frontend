import BaseView from './BaseView.js';
import Bus from '../modules/Bus.js';
import NavigationController from '../controllers/NavigationController.js';
import ProfileController from '../controllers/ProfileController.js';
import ProfileModel from '../models/ProfileModel.js';

const menu = require('./templates/menu.pug');

const notAuthLinks = [
	{
		label: '–í—Ö–æ–¥',
		href: '/signin'
	},
	{
		label: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
		href: '/signup'
	},
	{
		label: '–¢–∞–±–ª–∏—Ü–∞_–ª–∏–¥–µ—Ä–æ–≤',
		href: '/leaderboard'
	}
];

const mainMenu = [
	{
		label: 'üí£ –ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä',
		href: '/room'
	},
	{
		label: 'üí£ –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞',
		href: '/single'
	},
	{
		label: 'üí£ –û–± –∏–≥—Ä–µ',
		href: '/about'
	}
];

export default class MenuView extends BaseView {
	constructor () {
		super(menu);

		this._navigationController = new NavigationController();

		// –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç—Ç–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∏—Ö –∫–ª–∞—Å—Å–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è,
		// –µ—Å–ª–∏ –∏—Ö –Ω–µ —Å–æ–∑–¥–∞—Ç—å, –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Å–æ–±—ã—Ç–∏—è,–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –∫–ª–∞—Å—Å–∞—Ö ProfileController –∏ ProfileModel,
		// –µ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ –±—É–¥–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ Bus.
		// –æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã –≤ –∫–ª–∞—Å—Å–µ MenuView —Ç–∞–∫ –∫–∞–∫ –æ–±—ä–µ–∫—Ç —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º
		// –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
		this._profileController = new ProfileController();
		this._profileModel = new ProfileModel();

		Bus.on('done-get-user', this.render.bind(this));
	}

	show () {
		Bus.emit('get-user');
		super.show();
		this.registerActions();
	}

	render (user) {
		if (user.is_authenticated) {
			const authLinks = [
				{
					label: '–ü—Ä–æ—Ñ–∏–ª—å',
					href: `/profile/${user.id}`
				},
				{
					label: '–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤',
					href: '/leaderboard'
				},
				{
					label: '–í—ã–π—Ç–∏',
					href: '/signout'
				}
			];
			super.render({ mainMenu: mainMenu, headerValues: authLinks});
		} else {
			super.render({ mainMenu: mainMenu, headerValues: notAuthLinks });
		}
		Bus.off('done-get-user', this.render.bind(this));
	}

	registerActions () {
		this.viewDiv.addEventListener('click', this._navigationController.keyPressedCallback);
	}
}
